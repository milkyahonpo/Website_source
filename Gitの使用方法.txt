<下準備>
1, Gitのインストール
    1-1, https://gitforwindows.org/ の DOWNLOAD より、Gitのインストーラをダウンロード。
    1-2, ダウンロードしたインストーラを起動して、そのままインストール。(インストール先はそのままが良い)

2, VSCode(VisualStudio Code)のインストール
    2-1, https://code.visualstudio.com/download の Windows より、VSCodeのインストーラをダウンロード。
    2-2, ダウンロードしたインストーラを起動して、そのままインストール。(インストール先はお好みで)

3, VSCodeの拡張機能をダウンロード
    3-1, VSCodeを起動。
    3-2, 左側のメニューバーの四角いマークをクリックする。
    3-3, 検索ボックスから以下を検索し、インストールする。
    
        　名称                                              補足
        ・Japanese Language Pack for Visual Studio Code     VSCodeを日本語化してくれるプラグインです。
        ・Auto Close Tag                                    HTMLにおいて、記述したタグを自動で閉じてくれます。
        ・Auto Rename Tag                                   始まりのタグの名称を変えると、終わりのタグも変更してくれます。
        ・GitLens                                           プログラムのどの部分を自身が変更したのかを確認出来ます。
        ・HTML Snippets                                     VSCodeでHTMLの補完を行うための機能です。
        ・IntelliSense for CSS class names in HTML          VSCodeでCSSの補完を行うための機能です。

    3-3, VSCodeを再起動して変更を適用する。

<使用方法>
1, 初回作業時
    1-01, 今後作業をしていきたいフォルダを、お好みの名前で、お好みの場所に作成する。
    1-02, VSCodeを開く。
    1-03, VSCodeのメニューにある「ファイル」の「フォルダーを開く」より、1-1で作成したフォルダを選択。
    1-04, 左側のメニューバーの下から上にかけて二股に別れているマークをクリックする。
    1-05, ソース管理と書いてある部分の右側にあるGitのマークをクリックする。
    1-06, 初期化したいリポジトリの選択で、自身が1-2で開いたフォルダ名を選択する。
    1-07, VSCodeの、メニューにある「ターミナル」から「新しいターミナル」をクリックする。
    1-08, ターミナルに「git remote add origin https://github.com/milkyahonpo/Website_source」と入力して、
          今後編集したものを実際に適用(プッシュ)していく対象のリモートリポジトリとして、みるく屋本舗公式サイトを追加する。
    1-09, ターミナルに「git fetch」と入力して、みるく屋本舗公式サイトのソース(リモートリポジトリ)を読み込む。
    1-10, ターミナルに「git merge --allow-unrelated-histories origin/master」と入力して、
          1-09で読み込んだデータをローカルリポジトリに反映させる。

2, 通常作業
    2-1, VSCodeを開く。
    2-2, 「git pull origin master」で、ローカルリポジトリにリモートリポジトリとの差分の内容を反映させる。(必ずやること)
    2-3, 左柄のメニューバーのファイルのマークをクリックし、ディレクトリを表示する。
    2-4, 編集したいファイルをクリックし、エディタを開いて編集する。
    2-5, 左側のメニューバーの下から上にかけて二股に別れているマークをクリックする。ここに、実際に編集した内容がまとまっている。
    2-6, 編集した内容を全て適用したい場合は、+ボタンをクリックして「すべての変更をステージ」する。
         一部の内容を適用したい場合は、変更したいものにカーソルを合わせて「変更をステージ」する。
    2-7, チェックマークをクリックすることで、変更した内容が、Gitのローカルリポジトリに適用(コミット)される。
         コミットされる内容は、2-5でステージングしたもののみ。
         コミット時に、メッセージを要求されるが、仕様を統一するので、この通りに書くこと。
            [変更の種類]題名　具体的な説明
            例)
            [fix]カラム落ちバグの修正　ウィンドウサイズを小さくした場合にボタンの位置が下にずれてしまうバグを修正しました。
    2-8, …マークをクリックし、「プッシュ」を選択することでGitHub上のリモートリポジトリに反映される！(Webページにも反映される！)
